<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="
        http://www.springframework.org/schema/beans
        https://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/tx
        https://www.springframework.org/schema/tx/spring-tx.xsd
        http://www.springframework.org/schema/aop
        https://www.springframework.org/schema/aop/spring-aop.xsd">

    <!--配置业务层-->
    <bean id="accountService" class="com.itheima.service.impl.AccountServiceImpl">
        <property name="accountDao" ref="accountDao"></property>
    </bean>

    <!--配置账户的持久层-->
    <bean id="accountDao" class="com.itheima.dao.impl.AccountDaoImpl">
        <property name="dataSource" ref="dataSource"></property>
    </bean>

    <bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
        <property name="driverClassName" value="com.mysql.jdbc.Driver"></property>
        <property name="url" value="jdbc:mysql://localhost:3306/eesy"></property>
        <property name="username" value="root"></property>
        <property name="password" value="zhaoman"></property>
    </bean>

    <!--spring中基于XML的声明式事务控制配置步骤
    1、配置事务管理器
    2、配置事务的通知，导入事务的约束，tx名称空间和约束，同时也需要AOP
                    使用tx:advice标签配置事务通知
                    id:给事务通知起一个唯一标识
                    transaction-manager: 给事务通知提供一个事务管理器引用

    3、配置AOP中的通用切入点表达式
    4、建立事务通知和切入点表达式的对应关系
    5、配置事务的属性，tx.advice标签的内部
    -->
    <!--配置事务管理器-->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"></property>
    </bean>
    <!--配置事务的通知-->
    <tx:advice id="txAdvice" transaction-manager="transactionManager">
        <!--配置事务的属性
                isolation 指定事务的隔离级别，默认DEFAULT，表示使用数据库的默认隔离级别
                no-rollback-for  用于指定一个异常，产生该异常时事务不回滚，其他异常回滚。没有默认值表示任何异常都回滚。
                propagation 用于指定事务的传播行为。默认REQUIRED表示一定有事务，增删改。查可以选择SUPPORTS
                read-only 用于指定事务是否只读，只有查询方法才能设置为true，默认false，表示读写
                rollback-for 用于指定一个异常，产生该异常时事务回滚，其他异常不回滚。没有默认值表示任何异常都回滚。
                timeout 用于指定事务的超时时间，默认是-1，表示永不超时。指定的数值以秒为单位
                -->
        <tx:attributes>
            <tx:method name="*" propagation="REQUIRED" read-only="false"></tx:method>
            <tx:method name="find*" propagation="SUPPORTS" read-only="true"></tx:method>
        </tx:attributes>
    </tx:advice>
    <!--配置AOP-->
    <aop:config>
        <aop:pointcut id="pt1" expression="execution(* com.itheima.service.impl.*.*(..))"/>
        <!--建立事务通知和切入点表达式的对应关系-->
        <aop:advisor advice-ref="txAdvice" pointcut-ref="pt1"></aop:advisor>
    </aop:config>


</beans>